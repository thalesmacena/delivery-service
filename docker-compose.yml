version: '3'
services:
  awsdelivery:
    container_name: awsdelivery
    image: localstack/localstack
    hostname: awsdelivery
    environment:
      - SERVICES=s3,sqs,kinesis
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=DELIVERY
      - AWS_SECRET_ACCESS_KEY=DELIVERY
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_OUTPUT=json
    ports:
      - "8081:4566" # s3, sqs and kinesis
      - "4571:4571"
      
    volumes:
      -  ./opt:/docker-entrypoint-initaws.d
      -  ./opt:/root/localstack/config
      -  ./volume/localstack/data:/tmp/localstack/data
      -  ./volume/localstack/s3:/root/localstack/s3
  redisdelivery:
    container_name: redisdelivery
    image: redis
    ports:
      - "6379:6379"
    networks:
      - production
    volumes:
      - ./volume/redis:/data
  postgresdelivery:
    container_name: postgresdelivery
    build:
      context: .
      dockerfile: ./database.dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product
    ports:
      - "5432:5432"
    volumes:
      - ./volume/database:/var/lib/postgresql/data
    networks:
      - production
    restart: always
  delivery-service:
    container_name: delivery-service
    build:
      context: .
      dockerfile: ./service.dockerfile
    image: delivery-service
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgresdelivery
      - REDIS_URL=redisdelivery
      - WAIT_HOSTS=postgresdelivery:5432
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=30
    networks:
      - production
    depends_on:
      - postgresdelivery
      - redisdelivery
    restart: always
networks:
  production:
    driver: bridge